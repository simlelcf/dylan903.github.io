<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用GitHub Pages+Hexo搭建个人博客（踩坑之路）</title>
      <link href="/2019/07/04/li-yong-github-pages-da-jian-ge-ren-bo-ke-cai-keng-zhi-lu/"/>
      <url>/2019/07/04/li-yong-github-pages-da-jian-ge-ren-bo-ke-cai-keng-zhi-lu/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实很早之前就想搭建一个个人博客，出于各种原因，一直没有行动。最近终于着手开始搭建，希望自己可以一直坚持下去。在搭建的过程中，踩了不少坑，特此记录，也希望对后来人有一点点参考价值。</p><hr><h1 id="一、Github"><a href="#一、Github" class="headerlink" title="一、Github"></a>一、Github</h1><h2 id="1-注册Github账号"><a href="#1-注册Github账号" class="headerlink" title="1. 注册Github账号"></a>1. 注册Github账号</h2><p>进入<a href="https://github.com" target="_blank" rel="noopener">Github</a>官网，注册账号。</p><h2 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2. 创建仓库"></a>2. 创建仓库</h2><p>点击首页右上角头像左侧的头像<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705010509.png" alt><br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705011051.png" alt></p><h2 id="3-Github-Pages"><a href="#3-Github-Pages" class="headerlink" title="3. Github Pages"></a>3. Github Pages</h2><p>点击Settings<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705011609.png" alt><br>找到GitHub Pages，以用户名命名的仓库自动开启github pages，确认开启后就可以通过给出的网址访问了。<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705011514.png" alt></p><hr><h1 id="二、Hexo"><a href="#二、Hexo" class="headerlink" title="二、Hexo"></a>二、Hexo</h1><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a>是一个快速、简洁且高效的博客框架，可以参考官方文档。</p><h2 id="1-环境安装"><a href="#1-环境安装" class="headerlink" title="1. 环境安装"></a>1. 环境安装</h2><p>要使用hexo，必须安装<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a>和<a href="https://git-scm.com/download/" target="_blank" rel="noopener">Git</a>。网上教程很多，这里不再赘述。</p><h2 id="2-hexo安装"><a href="#2-hexo安装" class="headerlink" title="2. hexo安装"></a>2. hexo安装</h2><p>先创建存放blog文件的文件夹，切换到此文件夹右击git bash打开<br>输入命令安装hexo：<br><code>npm install -g hexo-cli</code></p><p>依次执行：</p><pre><code>hexo init npm installhexo g #生成静态网页hexo s #启动本地服务</code></pre><p>完成后，在浏览器输入localhost:4000就可以看到你的博客了</p><hr><h1 id="三、部署到Github"><a href="#三、部署到Github" class="headerlink" title="三、部署到Github"></a>三、部署到Github</h1><h2 id="1-设置SSH"><a href="#1-设置SSH" class="headerlink" title="1. 设置SSH"></a>1. 设置SSH</h2><p>返回GIt Bash中，依次输入：</p><pre><code>git config --global.name &quot;yourname&quot;git config --global.email &quot;youremail&quot;</code></pre><p>这里的yourname输入你的Github的用户名，<br>youremail输入你的Github邮箱</p><pre><code>cd ~/.sshlsmkdir key_backupcp id_rsa* key_backuprm id_rsa*#检查有没有生成过SSH并备份移除ssh-keygen -t rsa -C &quot;youremail&quot; #生成新的SSH，接下来输入密码 一路回车</code></pre><h2 id="2-添加SSH-Key到Github"><a href="#2-添加SSH-Key到Github" class="headerlink" title="2.添加SSH Key到Github"></a>2.添加SSH Key到Github</h2><p>点击头像，选择Settings<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705022259.png" alt><br>添加新的SSH Key<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705022426.png" alt><br>找到c:\users\当前用户名.ssh    文本形式打开id_ras.pub (打开系统查看隐藏文件选项)<br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705022656.png" alt><br>测试是否连接成功<br><code>ssh -T git@github.com</code><br>输入yes就ok</p><h2 id="3-部署到Github"><a href="#3-部署到Github" class="headerlink" title="3. 部署到Github"></a>3. 部署到Github</h2><p>打开hexo配置文件（根目录）<strong>_config.yml</strong><br>翻到最后将xxx修改为你的Github账户（冒号后面有一个空格）</p><pre><code>deploy:    type: git    repo: https://github.com/xxx/xxx.github.io.git    branch: master</code></pre><p>然后安装deploy-git(不然报错”ERROR Deployer not found: git“)<br><code>npm install hexo-deployer-git --save</code></p><p>然后</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>deploy时可能要你输入密码，再刷新username.github.io就可以看到你的blog。</p><hr><p><strong>注意：</strong></p><blockquote><p>如果输入命令的过程中出现了”LF will be replaced by CRLF”报错，<br>    1. windows中的换行符为 CRLF，而在Linux下的换行符为LF，所以在执行add . 时出现提示<br>    2. CRLF和LF是两种不同的换行格式，git工作区默认为CRLF来作为换行符，<br>        所以当我们项目文件里有用的地方使用LF作为换行符，这个时候我们再继续git add<br>        或者git commit的时候就会弹出警告，当最终push到远程仓库的时候git会统一格式全部转化为用CRLF作为换行符 </p></blockquote><p><strong>解决办法：</strong></p><blockquote><ol><li>这个只是一个警告，我们直接忽略就好。</li><li>git config –global core.autocrlf false  //禁用自动转换 </li></ol></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github分支备份hexo</title>
      <link href="/2018/09/05/github-fen-zhi-bei-fen-hexo/"/>
      <url>/2018/09/05/github-fen-zhi-bei-fen-hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>使用hexo搭建个人博客框架，配置起来有些消耗时间，管理起来也不是特别方便。特别是有时需要在其他电脑上写博客时，就让人头疼。所以我们就利用Github的分支，来备份hexo，方便快速搭上手写博客。</p><hr><h1 id="二、创建本地分支目录"><a href="#二、创建本地分支目录" class="headerlink" title="二、创建本地分支目录"></a>二、创建本地分支目录</h1><h2 id="1-新建文件夹存放分支工作目录。"><a href="#1-新建文件夹存放分支工作目录。" class="headerlink" title="1. 新建文件夹存放分支工作目录。"></a>1. 新建文件夹存放分支工作目录。</h2><p><code>mkdir hexo</code></p><h2 id="2-把你的GitHub的远程仓库克隆到hexo文件夹"><a href="#2-把你的GitHub的远程仓库克隆到hexo文件夹" class="headerlink" title="2. 把你的GitHub的远程仓库克隆到hexo文件夹"></a>2. 把你的GitHub的远程仓库克隆到hexo文件夹</h2><p><code>git clone https://github.com/yourusername/yourusername.github.io hexo</code></p><h2 id="3-删除除了版本管理的-git之外的所有文件和文件夹"><a href="#3-删除除了版本管理的-git之外的所有文件和文件夹" class="headerlink" title="3. 删除除了版本管理的.git之外的所有文件和文件夹"></a>3. 删除除了版本管理的.git之外的所有文件和文件夹</h2><pre><code>cd hexorm -r *</code></pre><h2 id="4-把要备份的文件复制到hexo目录"><a href="#4-把要备份的文件复制到hexo目录" class="headerlink" title="4. 把要备份的文件复制到hexo目录"></a>4. 把要备份的文件复制到hexo目录</h2><pre><code>scaffolds/source/themes/.git/.gitignore_config.ymlpackage.json</code></pre><blockquote><p>注意：<br>如果使用的主题是从Github克隆的，那么使用命令删除它的Git文件（以next主题为例）<br><code>rm -R themes/next/.git*</code></p></blockquote><hr><h1 id="三、创建分支"><a href="#三、创建分支" class="headerlink" title="三、创建分支"></a>三、创建分支</h1><h2 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1. 新建仓库"></a>1. 新建仓库</h2><p>在blog项目仓库下，输入备份分支hexo，点击create创建（因为我已经创建过了，所以显示的不一样）<br>或者在本地使用命令 <code>git checkout -b hexo</code><br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705133032.png" alt></p><h2 id="2-点击设置，把默认分支设置为新建的备份分支"><a href="#2-点击设置，把默认分支设置为新建的备份分支" class="headerlink" title="2. 点击设置，把默认分支设置为新建的备份分支"></a>2. 点击设置，把默认分支设置为新建的备份分支</h2><p><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705132053.png" alt><br><img src="https://raw.githubusercontent.com/dylan903/ImgUrl/master/Img/20190705132123.png" alt></p><hr><h1 id="四、提交备份"><a href="#四、提交备份" class="headerlink" title="四、提交备份"></a>四、提交备份</h1><p>在本地的hexo文件夹打开git bash，依次执行以下命令：</p><pre><code>git add -all   #保存所有文件到暂存区git commit -m &quot;创建hexo分支&quot; #提交变更git push --set-upstream origin hexo#推送到Github，并用`--set-upstream`与origin创建关联#将hexo设置为默认分区</code></pre><hr><h1 id="五、合并管理"><a href="#五、合并管理" class="headerlink" title="五、合并管理"></a>五、合并管理</h1><p>将本地hexo分支中的.git文件夹复制到博客根目录中，<br>我们只需要手动管理hexo分支中的文件（备份），<br>.gitignore之外的文件由hexo管理（hexo d）<br>移除主题目录下的Git管理文件</p><p><code>rm -R themes/next/.git* #以next主题为例</code></p><p>master分支的文件则由hexo管理，编辑hexo配置文件<em>_config.yml</em></p><pre><code>deploy:        type: git        repo: https://github.com/yourusername/yourusername.github.io        branch: master</code></pre><hr><h1 id="六、发表文章及修改配置"><a href="#六、发表文章及修改配置" class="headerlink" title="六、发表文章及修改配置"></a>六、发表文章及修改配置</h1><h2 id="1-将相关更改（配置修改或发表文章）推送到hexo分支"><a href="#1-将相关更改（配置修改或发表文章）推送到hexo分支" class="headerlink" title="1. 将相关更改（配置修改或发表文章）推送到hexo分支"></a>1. 将相关更改（配置修改或发表文章）推送到hexo分支</h2><pre><code>git add .git commit -m &quot;修改配置/发表文章&quot;git push origin hexo</code></pre><h2 id="2-将静态文件推送到master分支"><a href="#2-将静态文件推送到master分支" class="headerlink" title="2. 将静态文件推送到master分支"></a>2. 将静态文件推送到master分支</h2><pre><code>hexo clean hexo ghexo d</code></pre><hr><h1 id="七、迁移"><a href="#七、迁移" class="headerlink" title="七、迁移"></a>七、迁移</h1><h2 id="1-环境安装"><a href="#1-环境安装" class="headerlink" title="1. 环境安装"></a>1. 环境安装</h2><pre><code>npm install -g hexo-clihexo initnpm install</code></pre><h2 id="2-克隆hexo分支"><a href="#2-克隆hexo分支" class="headerlink" title="2. 克隆hexo分支"></a>2. 克隆hexo分支</h2><p><code>git clone -b hexo https://github.com/username/username.github.io</code></p><hr><p>这样就可以进行写作了，写完记得同步备份博客。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/white_idiot/article/details/80685990" target="_blank" rel="noopener">【GitHub】创建Git分支将Hexo博客迁移到其它电脑</a></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> hexo </tag>
            
            <tag> 备份 </tag>
            
            <tag> 分支 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
